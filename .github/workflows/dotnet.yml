name: Build, Test, SonarCloud

on:
  push:
    branches: [ "main" ] # Change if default branch differs
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

jobs:
  quality:
    runs-on: windows-latest  # Recommended for SonarScanner for .NET
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for accurate blame/PR decoration

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x  # Pin to specific version if needed

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarScanner for .NET
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Restore
        run: |
          dotnet restore TestApp.sln  # Change to your solution path if different

      - name: Build
        run: |
          dotnet build TestApp.sln --configuration Release --no-restore

      - name: Test
        run: |
          dotnet test TestApp.Tests/TestApp.Tests.csproj --configuration Release --no-build --collect:"XPlat Code Coverage"

      - name: SonarCloud Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # For PR decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # Create in repo Secrets
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"varunusstaffing043-sketch_.net-test-" `  # Project key
            /o:"varunusstaffing043-sketch" `             # Org key
            /d:sonar.token="${{ env.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.cobertura.xml,**/coverage.opencover.xml" `
            /d:sonar.coverage.exclusions="**/*.cshtml,**/bin/**,**/obj/**,**/*.g.cs,**/*.designer.cs"

          dotnet build TestApp.sln --configuration Release

          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"
