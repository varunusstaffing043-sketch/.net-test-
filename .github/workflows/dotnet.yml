name: .NET CI with SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install SonarScanner for .NET
        shell: pwsh
        run: |
          dotnet tool update --global dotnet-sonarscanner --version 10.4.1
          echo "$env:USERPROFILE\.dotnet\tools" >> $env:GITHUB_PATH

      - name: SonarCloud Begin
        shell: pwsh
        run: >
          dotnet-sonarscanner begin
         /k:"varunusstaffing043-sketch_.net-test-"
         /o:"varunusstaffing043-sketch"
         /d:sonar.token=${{ secrets.SONAR_TOKEN }}
         /d:sonar.host.url=https://sonarcloud.io

      - name: Restore
        run: dotnet restore TodoApi.sln

      - name: Build
        run: dotnet build TodoApi.sln --configuration Release --no-restore

      - name: Test with coverage
        run: dotnet test tests/TodoApi.Tests/TodoApi.Tests.csproj --configuration Release --no-build --collect:"XPlat Code Coverage"

      - name: Locate coverage file
        id: coverage
        shell: pwsh
        run: |
          $file = Get-ChildItem -Recurse -Filter "coverage.cobertura.xml" | Select-Object -First 1
          if (-not $file) { throw "coverage.cobertura.xml not found" }
          echo "path=$($file.FullName)" >> $env:GITHUB_OUTPUT

      - name: SonarCloud End
        shell: pwsh
        run: >
          dotnet-sonarscanner end
          /d:sonar.token=${{ secrets.SONAR_TOKEN }}
          /d:sonar.cs.coverageReportPaths=${{ steps.coverage.outputs.path }}
